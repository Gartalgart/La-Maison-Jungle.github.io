{"ast":null,"code":"var _jsxFileName = \"/home/remy/Documents/projet/react-cours/la-maison-jungle/src/components/CareScale.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CareScale({\n  scaleValue,\n  careType\n}) {\n  // D√©clare un tableau de valeurs de r√©f√©rence pour le niveau de soin (1, 2, 3)\n  const range = [1, 2, 3];\n\n  // D√©termine le type d'ic√¥ne √† afficher en fonction du type de soin : '‚òÄÔ∏è' pour 'light', 'üíß' pour 'water'\n  const scaleType = careType === 'light' ? '‚òÄÔ∏è' : 'üíß';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: range.map(rangeElem =>\n    // Si scaleValue est sup√©rieur ou √©gal √† rangeElem, affiche l'ic√¥ne scaleType\n    scaleValue >= rangeElem ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: scaleType\n    }, rangeElem.toString(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }, this) :\n    // Si scaleValue est inf√©rieur, ne rien afficher (null)\n    null)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n_c = CareScale;\nexport default CareScale;\nvar _c;\n$RefreshReg$(_c, \"CareScale\");","map":{"version":3,"names":["CareScale","scaleValue","careType","range","scaleType","_jsxDEV","children","map","rangeElem","toString","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/remy/Documents/projet/react-cours/la-maison-jungle/src/components/CareScale.js"],"sourcesContent":["\n\nfunction CareScale({ scaleValue, careType }) {\n    // D√©clare un tableau de valeurs de r√©f√©rence pour le niveau de soin (1, 2, 3)\n    const range = [1, 2, 3];\n    \n    // D√©termine le type d'ic√¥ne √† afficher en fonction du type de soin : '‚òÄÔ∏è' pour 'light', 'üíß' pour 'water'\n    const scaleType = careType === 'light' ? '‚òÄÔ∏è' : 'üíß';\n\n    return (\n        <div>\n            {/* Utilise map() pour parcourir le tableau range et afficher l'ic√¥ne en fonction du scaleValue */}\n            {range.map((rangeElem) =>\n                // Si scaleValue est sup√©rieur ou √©gal √† rangeElem, affiche l'ic√¥ne scaleType\n                scaleValue >= rangeElem ? \n                    <span key={rangeElem.toString()}>{scaleType}</span> \n                    : \n                    // Si scaleValue est inf√©rieur, ne rien afficher (null)\n                    null\n            )}\n        </div>\n    );\n}\n\n\nexport default CareScale"],"mappings":";;AAEA,SAASA,SAASA,CAAC;EAAEC,UAAU;EAAEC;AAAS,CAAC,EAAE;EACzC;EACA,MAAMC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;EAEvB;EACA,MAAMC,SAAS,GAAGF,QAAQ,KAAK,OAAO,GAAG,IAAI,GAAG,IAAI;EAEpD,oBACIG,OAAA;IAAAC,QAAA,EAEKH,KAAK,CAACI,GAAG,CAAEC,SAAS;IACjB;IACAP,UAAU,IAAIO,SAAS,gBACnBH,OAAA;MAAAC,QAAA,EAAkCF;IAAS,GAAhCI,SAAS,CAACC,QAAQ,CAAC,CAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAmB,CAAC;IAEnD;IACA,IACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACC,EAAA,GApBQd,SAAS;AAuBlB,eAAeA,SAAS;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}