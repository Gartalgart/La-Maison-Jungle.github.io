{"ast":null,"code":"var _jsxFileName = \"/home/remy/Documents/projet/react-cours/la-maison-jungle/src/components/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Banner from \"./Banner\";\nimport Cart from \"./Cart\";\nimport ShoppingList from \"./ShoppingList\";\nimport Footer from \"./Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const addToCart = (name, price) => {\n    setCartItems(prevItems => {\n      //prevItems représente la version actuelle de cartItems (le panier avant l’ajout de la nouvelle plante).\n      const existingItem = prevItems.find(item => item.name === name); //find() parcourt prevItems pour vérifier s'il existe un article dont le name correspond à la plante ajoutée. Si une plante avec le même name est déjà présente dans prevItems, elle est stockée dans existingItem. Si la plante n'existe pas encore, existingItem sera undefined.\n      if (existingItem) {\n        return prevItems.map(item => item.name === name ? {\n          ...item,\n          quantity: item.quantity + 1\n        } : item); //map() est utilisé pour créer une nouvelle version de prevItems, où chaque élément est vérifié. Pour l'élément correspondant à la plante (c’est-à-dire item.name === name), on crée un nouvel objet avec les mêmes propriétés (...item) mais avec quantity incrémenté de 1 (quantity: item.quantity + 1). Les autres éléments du panier sont laissés inchangés (: item).\n      } else {\n        return [...prevItems, {\n          name,\n          price,\n          quantity: 1\n        }]; //Si la plante n’est pas déjà dans le panier, elle est ajoutée en tant que nouvel élément. ...prevItems ajoute tous les éléments existants, puis { name, price, quantity: 1 } ajoute la nouvelle plante avec une quantité initiale de 1.\n      }\n    });\n  };\n  const clearCart = () => {\n    setCartItems([]);\n  };\n  const clearElement = () => {\n    return [...prevItems, {\n      quantity: -1\n    }];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(Cart, {\n        cartItems: cartItems,\n        clearCart: clearCart,\n        clearElement: clearElement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ShoppingList, {\n        addToCart: addToCart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jeyeRm/hZ/3zvXF4PAYTLSHDNRs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Banner","Cart","ShoppingList","Footer","jsxDEV","_jsxDEV","App","_s","cartItems","setCartItems","addToCart","name","price","prevItems","existingItem","find","item","map","quantity","clearCart","clearElement","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/home/remy/Documents/projet/react-cours/la-maison-jungle/src/components/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport Banner from \"./Banner\";\nimport Cart from \"./Cart\";\nimport ShoppingList from \"./ShoppingList\";\nimport Footer from \"./Footer\";\n\nfunction App(){\n  const [cartItems, setCartItems] = useState([]);\n  const addToCart = (name, price) => {\n    setCartItems((prevItems) => {//prevItems représente la version actuelle de cartItems (le panier avant l’ajout de la nouvelle plante).\n      const existingItem = prevItems.find((item) => item.name === name);//find() parcourt prevItems pour vérifier s'il existe un article dont le name correspond à la plante ajoutée. Si une plante avec le même name est déjà présente dans prevItems, elle est stockée dans existingItem. Si la plante n'existe pas encore, existingItem sera undefined.\n      if(existingItem){\n        return prevItems.map((item) =>\n        item.name === name ? {...item, quantity: item.quantity + 1} : item);//map() est utilisé pour créer une nouvelle version de prevItems, où chaque élément est vérifié. Pour l'élément correspondant à la plante (c’est-à-dire item.name === name), on crée un nouvel objet avec les mêmes propriétés (...item) mais avec quantity incrémenté de 1 (quantity: item.quantity + 1). Les autres éléments du panier sont laissés inchangés (: item).\n      }else{\n        return [...prevItems, {name, price, quantity: 1}];//Si la plante n’est pas déjà dans le panier, elle est ajoutée en tant que nouvel élément. ...prevItems ajoute tous les éléments existants, puis { name, price, quantity: 1 } ajoute la nouvelle plante avec une quantité initiale de 1.\n      }\n    });\n  };\n\n  const clearCart = () => {\n    setCartItems([]);\n  };\n\n  const clearElement = () => {\n    return [...prevItems, {quantity: - 1}];\n  };\n\n  return (\n    <div>\n      <Banner />\n      <div className=\"main\">\n        <Cart cartItems={cartItems} clearCart={clearCart} clearElement={clearElement}/>\n        <ShoppingList addToCart={addToCart}/>\n      </div>\n      <Footer />  \n    </div> \n  );\n\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,GAAGA,CAAA,EAAE;EAAAC,EAAA;EACZ,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMW,SAAS,GAAGA,CAACC,IAAI,EAAEC,KAAK,KAAK;IACjCH,YAAY,CAAEI,SAAS,IAAK;MAAC;MAC3B,MAAMC,YAAY,GAAGD,SAAS,CAACE,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACL,IAAI,KAAKA,IAAI,CAAC,CAAC;MAClE,IAAGG,YAAY,EAAC;QACd,OAAOD,SAAS,CAACI,GAAG,CAAED,IAAI,IAC1BA,IAAI,CAACL,IAAI,KAAKA,IAAI,GAAG;UAAC,GAAGK,IAAI;UAAEE,QAAQ,EAAEF,IAAI,CAACE,QAAQ,GAAG;QAAC,CAAC,GAAGF,IAAI,CAAC,CAAC;MACtE,CAAC,MAAI;QACH,OAAO,CAAC,GAAGH,SAAS,EAAE;UAACF,IAAI;UAAEC,KAAK;UAAEM,QAAQ,EAAE;QAAC,CAAC,CAAC,CAAC;MACpD;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtBV,YAAY,CAAC,EAAE,CAAC;EAClB,CAAC;EAED,MAAMW,YAAY,GAAGA,CAAA,KAAM;IACzB,OAAO,CAAC,GAAGP,SAAS,EAAE;MAACK,QAAQ,EAAE,CAAE;IAAC,CAAC,CAAC;EACxC,CAAC;EAED,oBACEb,OAAA;IAAAgB,QAAA,gBACEhB,OAAA,CAACL,MAAM;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVpB,OAAA;MAAKqB,SAAS,EAAC,MAAM;MAAAL,QAAA,gBACnBhB,OAAA,CAACJ,IAAI;QAACO,SAAS,EAAEA,SAAU;QAACW,SAAS,EAAEA,SAAU;QAACC,YAAY,EAAEA;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC/EpB,OAAA,CAACH,YAAY;QAACQ,SAAS,EAAEA;MAAU;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACNpB,OAAA,CAACF,MAAM;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAGV;AAAClB,EAAA,CAjCQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}