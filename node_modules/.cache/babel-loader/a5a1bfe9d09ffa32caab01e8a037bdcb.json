{"ast":null,"code":"var _jsxFileName = \"/home/remy/Documents/projet/react-cours/la-maison-jungle/src/components/ShoppingList.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { plantList } from \"./datas/plantList\";\nimport PlantItem from \"./PlantItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ShoppingList({\n  addToCart\n}) {\n  _s();\n  // État pour stocker la liste des plantes filtrées\n  const [filteredPlants, setFilteredPlants] = useState(plantList);\n\n  // Fonction pour gérer le changement de catégorie\n  const handleCategoryChange = e => {\n    const category = e.target.value;\n    let filtered;\n\n    // Filtrer les plantes selon la catégorie et le premier caractère de l'ID\n    if (category === \"classique\") {\n      filtered = plantList.filter(plant => {\n        const firstChar = plant.id.charAt(0);\n        return firstChar >= '1' && firstChar <= '4';\n      });\n    } else if (category === \"exterieure\") {\n      filtered = plantList.filter(plant => {\n        const firstChar = plant.id.charAt(0);\n        return firstChar >= '5' && firstChar <= '7';\n      });\n    } else if (category === \"grasse\") {\n      filtered = plantList.filter(plant => {\n        const firstChar = plant.id.charAt(0);\n        return firstChar >= '8' && firstChar <= '9';\n      });\n    } else {\n      // Réinitialiser si aucune catégorie sélectionnée\n      filtered = plantList;\n    }\n\n    // Mettre à jour la liste des plantes filtrées\n    setFilteredPlants(filtered);\n  };\n\n  // Fonction pour réinitialiser le filtre\n  const resetFilter = () => {\n    setFilteredPlants(plantList); // Réinitialise à la liste complète\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ShoppingList\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"selectCategory\",\n        onChange: handleCategoryChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"---\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"classique\",\n          children: \"Classique\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"exterieure\",\n          children: \"Ext\\xE9rieur\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"grasse\",\n          children: \"Plantes grasses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetFilter,\n        children: \"r\\xE9initialiser\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"ulPlant\",\n      children: plantList.map(plant => /*#__PURE__*/_jsxDEV(PlantItem, {\n        id: plant.id,\n        image: plant.image,\n        name: plant.name,\n        price: plant.price,\n        water: plant.water,\n        light: plant.light,\n        addToCart: addToCart\n      }, plant.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(ShoppingList, \"UCJ8XEFfIK9DdXN45a08FIGLJI4=\");\n_c = ShoppingList;\nexport default ShoppingList;\nvar _c;\n$RefreshReg$(_c, \"ShoppingList\");","map":{"version":3,"names":["useState","plantList","PlantItem","jsxDEV","_jsxDEV","ShoppingList","addToCart","_s","filteredPlants","setFilteredPlants","handleCategoryChange","e","category","target","value","filtered","filter","plant","firstChar","id","charAt","resetFilter","className","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","image","name","price","water","light","_c","$RefreshReg$"],"sources":["/home/remy/Documents/projet/react-cours/la-maison-jungle/src/components/ShoppingList.js"],"sourcesContent":["import { useState } from \"react\";\nimport { plantList } from \"./datas/plantList\";\nimport PlantItem from \"./PlantItem\";\n\nfunction ShoppingList({addToCart}){\n    // État pour stocker la liste des plantes filtrées\n    const [filteredPlants, setFilteredPlants] = useState(plantList);\n\n    // Fonction pour gérer le changement de catégorie\n    const handleCategoryChange = (e) => {\n        const category = e.target.value;\n        let filtered;\n\n        // Filtrer les plantes selon la catégorie et le premier caractère de l'ID\n        if (category === \"classique\") {\n            filtered = plantList.filter((plant) => {\n                const firstChar = plant.id.charAt(0);\n                return firstChar >= '1' && firstChar <= '4';\n            });\n        } else if (category === \"exterieure\") {\n            filtered = plantList.filter((plant) => {\n                const firstChar = plant.id.charAt(0);\n                return firstChar >= '5' && firstChar <= '7';\n            });\n        } else if (category === \"grasse\") {\n            filtered = plantList.filter((plant) => {\n                const firstChar = plant.id.charAt(0);\n                return firstChar >= '8' && firstChar <= '9';\n            });\n        } else {\n            // Réinitialiser si aucune catégorie sélectionnée\n            filtered = plantList;\n        }\n\n        // Mettre à jour la liste des plantes filtrées\n        setFilteredPlants(filtered);\n    };\n\n    // Fonction pour réinitialiser le filtre\n    const resetFilter = () => {\n        setFilteredPlants(plantList); // Réinitialise à la liste complète\n    };\n\n    return(\n        <div className=\"ShoppingList\">\n            <div className=\"category\">\n                <select className=\"selectCategory\" onChange={handleCategoryChange}>\n                    <option value=''>---</option>\n                    <option value='classique'>Classique</option>\n                    <option value='exterieure'>Extérieur</option>\n                    <option value='grasse'>Plantes grasses</option>\n                </select>\n                <button onClick={resetFilter}>réinitialiser</button>\n            </div>\n            <ul className=\"ulPlant\">\n                {plantList.map((plant) => (\n                    <PlantItem\n                        key={plant.id}\n                        id={plant.id}\n                        image={plant.image}\n                        name={plant.name}\n                        price={plant.price}\n                        water={plant.water}\n                        light={plant.light}\n                        addToCart={addToCart}\n                    />\n                ))} \n            </ul>\n        </div>\n        \n    )\n}\n\nexport default ShoppingList"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}